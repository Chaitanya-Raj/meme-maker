{"version":3,"sources":["components/Meme.js","App.js","index.js"],"names":["Meme","meme","console","log","className","src","url","alt","name","App","useState","memes","SetMemes","useEffect","Axios","get","crossDomain","then","response","data","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"kQAYeA,EAVF,SAACC,GAEZ,OADAC,QAAQC,IAAIF,EAAKA,MAEf,yBAAKG,UAAU,QACb,yBAAKC,IAAKJ,EAAKA,KAAKK,IAAKC,IAAI,SAC7B,2BAAIN,EAAKA,KAAKO,Q,YCoBLC,MArBf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,KAkBb,OAfAC,qBAAU,WACRC,IAAMC,IAAI,oCAAqC,CAAEC,aAAa,IAAQC,MACpE,SAACC,GACCN,EAASM,EAASC,KAAKA,KAAKR,YAG/B,IASI,yBAAKP,UAAU,aANhBO,EACKA,EAAMS,KAAI,SAACnB,GAAD,OAAU,kBAAC,EAAD,CAAMoB,IAAKpB,EAAKqB,GAAIrB,KAAMA,OAEhD,0CCjBXsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e2230f00.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Meme = (meme) => {\r\n  console.log(meme.meme);\r\n  return (\r\n    <div className=\"meme\">\r\n      <img src={meme.meme.url} alt=\"meme\" />\r\n      <p>{meme.meme.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Meme;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport Meme from \"./components/Meme\";\r\nimport \"./reset.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [memes, SetMemes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://api.imgflip.com/get_memes\", { crossDomain: true }).then(\r\n      (response) => {\r\n        SetMemes(response.data.data.memes);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const memelist = () => {\r\n    if (memes) {\r\n      return memes.map((meme) => <Meme key={meme.id} meme={meme} />);\r\n    }\r\n    return <div>waiting</div>;\r\n  };\r\n\r\n  return <div className=\"container\">{memelist()}</div>;\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}